<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.module.mapper.commons.db.CmDatabaseMapper">
	<resultMap id="BaseResultMap" type="org.module.model.commons.db.CmDatabase">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="en_name" property="enName" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="initial_size" property="initialSize" jdbcType="INTEGER" />
		<result column="max_active" property="maxActive" jdbcType="INTEGER" />
		<result column="min_idle" property="minIdle" jdbcType="INTEGER" />
		<result column="max_wait" property="maxWait" jdbcType="INTEGER" />
		<result column="test_on_borrow" property="testOnBorrow"
			jdbcType="INTEGER" />
		<result column="test_on_return" property="testOnReturn"
			jdbcType="INTEGER" />
		<result column="test_while_idle" property="testWhileIdle"
			jdbcType="INTEGER" />
		<result column="time_between_eviction_runs_millis" property="timeBetweenEvictionRunsMillis"
			jdbcType="INTEGER" />
		<result column="min_evictable_idle_time_millis" property="minEvictableIdleTimeMillis"
			jdbcType="INTEGER" />
		<result column="remove_abandoned" property="removeAbandoned"
			jdbcType="INTEGER" />
		<result column="remove_abandoned_timeout" property="removeAbandonedTimeout"
			jdbcType="INTEGER" />
		<result column="log_abandoned" property="logAbandoned"
			jdbcType="INTEGER" />
		<result column="filters" property="filters" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="desc" property="desc" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, code, name, en_name, url, username, password,
		initial_size,
		max_active,
		min_idle, max_wait, test_on_borrow,
		test_on_return,
		test_while_idle,
		time_between_eviction_runs_millis,
		min_evictable_idle_time_millis, remove_abandoned,
		remove_abandoned_timeout, log_abandoned,
		filters, create_user,
		create_time, update_user, update_time,`desc`
	</sql>
	<select id="selectByCode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from cm_database
		where `code` = #{code,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByCode" parameterType="java.lang.String">
		delete from
		cm_database
		where `code` = #{code,jdbcType=VARCHAR}
	</delete>
	<insert id="insertSelective" parameterType="org.module.model.commons.db.CmDatabase">
		insert into cm_database
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="enName != null">
				en_name,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="initialSize != null">
				initial_size,
			</if>
			<if test="maxActive != null">
				max_active,
			</if>
			<if test="minIdle != null">
				min_idle,
			</if>
			<if test="maxWait != null">
				max_wait,
			</if>
			<if test="testOnBorrow != null">
				test_on_borrow,
			</if>
			<if test="testOnReturn != null">
				test_on_return,
			</if>
			<if test="testWhileIdle != null">
				test_while_idle,
			</if>
			<if test="timeBetweenEvictionRunsMillis != null">
				time_between_eviction_runs_millis,
			</if>
			<if test="minEvictableIdleTimeMillis != null">
				min_evictable_idle_time_millis,
			</if>
			<if test="removeAbandoned != null">
				remove_abandoned,
			</if>
			<if test="removeAbandonedTimeout != null">
				remove_abandoned_timeout,
			</if>
			<if test="logAbandoned != null">
				log_abandoned,
			</if>
			<if test="filters != null">
				filters,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="desc != null">
				`desc`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="enName != null">
				#{enName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="initialSize != null">
				#{initialSize,jdbcType=INTEGER},
			</if>
			<if test="maxActive != null">
				#{maxActive,jdbcType=INTEGER},
			</if>
			<if test="minIdle != null">
				#{minIdle,jdbcType=INTEGER},
			</if>
			<if test="maxWait != null">
				#{maxWait,jdbcType=INTEGER},
			</if>
			<if test="testOnBorrow != null">
				#{testOnBorrow,jdbcType=INTEGER},
			</if>
			<if test="testOnReturn != null">
				#{testOnReturn,jdbcType=INTEGER},
			</if>
			<if test="testWhileIdle != null">
				#{testWhileIdle,jdbcType=INTEGER},
			</if>
			<if test="timeBetweenEvictionRunsMillis != null">
				#{timeBetweenEvictionRunsMillis,jdbcType=INTEGER},
			</if>
			<if test="minEvictableIdleTimeMillis != null">
				#{minEvictableIdleTimeMillis,jdbcType=INTEGER},
			</if>
			<if test="removeAbandoned != null">
				#{removeAbandoned,jdbcType=INTEGER},
			</if>
			<if test="removeAbandonedTimeout != null">
				#{removeAbandonedTimeout,jdbcType=INTEGER},
			</if>
			<if test="logAbandoned != null">
				#{logAbandoned,jdbcType=INTEGER},
			</if>
			<if test="filters != null">
				#{filters,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				#{desc,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByCode" parameterType="org.module.model.commons.db.CmDatabase">
		update cm_database
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="enName != null">
				en_name = #{enName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="initialSize != null">
				initial_size = #{initialSize,jdbcType=INTEGER},
			</if>
			<if test="maxActive != null">
				max_active = #{maxActive,jdbcType=INTEGER},
			</if>
			<if test="minIdle != null">
				min_idle = #{minIdle,jdbcType=INTEGER},
			</if>
			<if test="maxWait != null">
				max_wait = #{maxWait,jdbcType=INTEGER},
			</if>
			<if test="testOnBorrow != null">
				test_on_borrow = #{testOnBorrow,jdbcType=INTEGER},
			</if>
			<if test="testOnReturn != null">
				test_on_return = #{testOnReturn,jdbcType=INTEGER},
			</if>
			<if test="testWhileIdle != null">
				test_while_idle = #{testWhileIdle,jdbcType=INTEGER},
			</if>
			<if test="timeBetweenEvictionRunsMillis != null">
				time_between_eviction_runs_millis =
				#{timeBetweenEvictionRunsMillis,jdbcType=INTEGER},
			</if>
			<if test="minEvictableIdleTimeMillis != null">
				min_evictable_idle_time_millis =
				#{minEvictableIdleTimeMillis,jdbcType=INTEGER},
			</if>
			<if test="removeAbandoned != null">
				remove_abandoned = #{removeAbandoned,jdbcType=INTEGER},
			</if>
			<if test="removeAbandonedTimeout != null">
				remove_abandoned_timeout =
				#{removeAbandonedTimeout,jdbcType=INTEGER},
			</if>
			<if test="logAbandoned != null">
				log_abandoned = #{logAbandoned,jdbcType=INTEGER},
			</if>
			<if test="filters != null">
				filters = #{filters,jdbcType=VARCHAR},
			</if>
			update_user = #{updateUser,jdbcType=VARCHAR},
			update_time =
			#{updateTime,jdbcType=VARCHAR},
			<if test="desc != null">
				`desc` = #{desc,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where `code` = #{code,jdbcType=VARCHAR}
	</update>
</mapper>