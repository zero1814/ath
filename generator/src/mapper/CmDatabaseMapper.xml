<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.module.mapper.commons.db.CmDatabaseMapper" >
  <resultMap id="BaseResultMap" type="org.module.commons.model.db.CmDatabase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="en_name" property="enName" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="initial_size" property="initialSize" jdbcType="INTEGER" />
    <result column="max_active" property="maxActive" jdbcType="INTEGER" />
    <result column="min_idle" property="minIdle" jdbcType="INTEGER" />
    <result column="max_wait" property="maxWait" jdbcType="INTEGER" />
    <result column="test_on_borrow" property="testOnBorrow" jdbcType="INTEGER" />
    <result column="test_on_return" property="testOnReturn" jdbcType="INTEGER" />
    <result column="test_while_idle" property="testWhileIdle" jdbcType="INTEGER" />
    <result column="time_between_eviction_runs_millis" property="timeBetweenEvictionRunsMillis" jdbcType="INTEGER" />
    <result column="min_evictable_idle_time_millis" property="minEvictableIdleTimeMillis" jdbcType="INTEGER" />
    <result column="remove_abandoned" property="removeAbandoned" jdbcType="INTEGER" />
    <result column="remove_abandoned_timeout" property="removeAbandonedTimeout" jdbcType="INTEGER" />
    <result column="log_abandoned" property="logAbandoned" jdbcType="INTEGER" />
    <result column="filters" property="filters" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.module.commons.model.db.CmDatabase" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="desc" property="desc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, uid, code, name, en_name, url, username, password, initial_size, max_active, 
    min_idle, max_wait, test_on_borrow, test_on_return, test_while_idle, time_between_eviction_runs_millis, 
    min_evictable_idle_time_millis, remove_abandoned, remove_abandoned_timeout, log_abandoned, 
    filters, create_user, create_time, update_user, update_time
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cm_database
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from cm_database
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.module.commons.model.db.CmDatabase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cm_database (id, uid, code, 
      name, en_name, url, 
      username, password, initial_size, 
      max_active, min_idle, max_wait, 
      test_on_borrow, test_on_return, test_while_idle, 
      time_between_eviction_runs_millis, min_evictable_idle_time_millis, 
      remove_abandoned, remove_abandoned_timeout, 
      log_abandoned, filters, create_user, 
      create_time, update_user, update_time, 
      desc)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{enName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{initialSize,jdbcType=INTEGER}, 
      #{maxActive,jdbcType=INTEGER}, #{minIdle,jdbcType=INTEGER}, #{maxWait,jdbcType=INTEGER}, 
      #{testOnBorrow,jdbcType=INTEGER}, #{testOnReturn,jdbcType=INTEGER}, #{testWhileIdle,jdbcType=INTEGER}, 
      #{timeBetweenEvictionRunsMillis,jdbcType=INTEGER}, #{minEvictableIdleTimeMillis,jdbcType=INTEGER}, 
      #{removeAbandoned,jdbcType=INTEGER}, #{removeAbandonedTimeout,jdbcType=INTEGER}, 
      #{logAbandoned,jdbcType=INTEGER}, #{filters,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{desc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.module.commons.model.db.CmDatabase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cm_database
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="enName != null" >
        en_name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="initialSize != null" >
        initial_size,
      </if>
      <if test="maxActive != null" >
        max_active,
      </if>
      <if test="minIdle != null" >
        min_idle,
      </if>
      <if test="maxWait != null" >
        max_wait,
      </if>
      <if test="testOnBorrow != null" >
        test_on_borrow,
      </if>
      <if test="testOnReturn != null" >
        test_on_return,
      </if>
      <if test="testWhileIdle != null" >
        test_while_idle,
      </if>
      <if test="timeBetweenEvictionRunsMillis != null" >
        time_between_eviction_runs_millis,
      </if>
      <if test="minEvictableIdleTimeMillis != null" >
        min_evictable_idle_time_millis,
      </if>
      <if test="removeAbandoned != null" >
        remove_abandoned,
      </if>
      <if test="removeAbandonedTimeout != null" >
        remove_abandoned_timeout,
      </if>
      <if test="logAbandoned != null" >
        log_abandoned,
      </if>
      <if test="filters != null" >
        filters,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="desc != null" >
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="initialSize != null" >
        #{initialSize,jdbcType=INTEGER},
      </if>
      <if test="maxActive != null" >
        #{maxActive,jdbcType=INTEGER},
      </if>
      <if test="minIdle != null" >
        #{minIdle,jdbcType=INTEGER},
      </if>
      <if test="maxWait != null" >
        #{maxWait,jdbcType=INTEGER},
      </if>
      <if test="testOnBorrow != null" >
        #{testOnBorrow,jdbcType=INTEGER},
      </if>
      <if test="testOnReturn != null" >
        #{testOnReturn,jdbcType=INTEGER},
      </if>
      <if test="testWhileIdle != null" >
        #{testWhileIdle,jdbcType=INTEGER},
      </if>
      <if test="timeBetweenEvictionRunsMillis != null" >
        #{timeBetweenEvictionRunsMillis,jdbcType=INTEGER},
      </if>
      <if test="minEvictableIdleTimeMillis != null" >
        #{minEvictableIdleTimeMillis,jdbcType=INTEGER},
      </if>
      <if test="removeAbandoned != null" >
        #{removeAbandoned,jdbcType=INTEGER},
      </if>
      <if test="removeAbandonedTimeout != null" >
        #{removeAbandonedTimeout,jdbcType=INTEGER},
      </if>
      <if test="logAbandoned != null" >
        #{logAbandoned,jdbcType=INTEGER},
      </if>
      <if test="filters != null" >
        #{filters,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.module.commons.model.db.CmDatabase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cm_database
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="initialSize != null" >
        initial_size = #{initialSize,jdbcType=INTEGER},
      </if>
      <if test="maxActive != null" >
        max_active = #{maxActive,jdbcType=INTEGER},
      </if>
      <if test="minIdle != null" >
        min_idle = #{minIdle,jdbcType=INTEGER},
      </if>
      <if test="maxWait != null" >
        max_wait = #{maxWait,jdbcType=INTEGER},
      </if>
      <if test="testOnBorrow != null" >
        test_on_borrow = #{testOnBorrow,jdbcType=INTEGER},
      </if>
      <if test="testOnReturn != null" >
        test_on_return = #{testOnReturn,jdbcType=INTEGER},
      </if>
      <if test="testWhileIdle != null" >
        test_while_idle = #{testWhileIdle,jdbcType=INTEGER},
      </if>
      <if test="timeBetweenEvictionRunsMillis != null" >
        time_between_eviction_runs_millis = #{timeBetweenEvictionRunsMillis,jdbcType=INTEGER},
      </if>
      <if test="minEvictableIdleTimeMillis != null" >
        min_evictable_idle_time_millis = #{minEvictableIdleTimeMillis,jdbcType=INTEGER},
      </if>
      <if test="removeAbandoned != null" >
        remove_abandoned = #{removeAbandoned,jdbcType=INTEGER},
      </if>
      <if test="removeAbandonedTimeout != null" >
        remove_abandoned_timeout = #{removeAbandonedTimeout,jdbcType=INTEGER},
      </if>
      <if test="logAbandoned != null" >
        log_abandoned = #{logAbandoned,jdbcType=INTEGER},
      </if>
      <if test="filters != null" >
        filters = #{filters,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.module.commons.model.db.CmDatabase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cm_database
    set uid = #{uid,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      en_name = #{enName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      initial_size = #{initialSize,jdbcType=INTEGER},
      max_active = #{maxActive,jdbcType=INTEGER},
      min_idle = #{minIdle,jdbcType=INTEGER},
      max_wait = #{maxWait,jdbcType=INTEGER},
      test_on_borrow = #{testOnBorrow,jdbcType=INTEGER},
      test_on_return = #{testOnReturn,jdbcType=INTEGER},
      test_while_idle = #{testWhileIdle,jdbcType=INTEGER},
      time_between_eviction_runs_millis = #{timeBetweenEvictionRunsMillis,jdbcType=INTEGER},
      min_evictable_idle_time_millis = #{minEvictableIdleTimeMillis,jdbcType=INTEGER},
      remove_abandoned = #{removeAbandoned,jdbcType=INTEGER},
      remove_abandoned_timeout = #{removeAbandonedTimeout,jdbcType=INTEGER},
      log_abandoned = #{logAbandoned,jdbcType=INTEGER},
      filters = #{filters,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      desc = #{desc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.module.commons.model.db.CmDatabase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cm_database
    set uid = #{uid,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      en_name = #{enName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      initial_size = #{initialSize,jdbcType=INTEGER},
      max_active = #{maxActive,jdbcType=INTEGER},
      min_idle = #{minIdle,jdbcType=INTEGER},
      max_wait = #{maxWait,jdbcType=INTEGER},
      test_on_borrow = #{testOnBorrow,jdbcType=INTEGER},
      test_on_return = #{testOnReturn,jdbcType=INTEGER},
      test_while_idle = #{testWhileIdle,jdbcType=INTEGER},
      time_between_eviction_runs_millis = #{timeBetweenEvictionRunsMillis,jdbcType=INTEGER},
      min_evictable_idle_time_millis = #{minEvictableIdleTimeMillis,jdbcType=INTEGER},
      remove_abandoned = #{removeAbandoned,jdbcType=INTEGER},
      remove_abandoned_timeout = #{removeAbandonedTimeout,jdbcType=INTEGER},
      log_abandoned = #{logAbandoned,jdbcType=INTEGER},
      filters = #{filters,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>