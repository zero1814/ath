<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.module.mapper.system.db.SmColumnMapper">
	<resultMap id="BaseResultMap" type="org.module.model.system.db.SmColumn">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="table_code" property="tableCode" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="column_note" property="columnNote" jdbcType="VARCHAR" />
		<result column="column_type" property="columnType" jdbcType="VARCHAR" />
		<result column="column_length" property="columnLength"
			jdbcType="INTEGER" />
		<result column="numeric_scale" property="numericScale"
			jdbcType="INTEGER" />
		<result column="column_sort" property="columnSort" jdbcType="INTEGER" />
		<result column="column_key" property="columnKey" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, code, table_code, name, column_note,
		column_type,
		column_length,
		numeric_scale, column_sort, column_key,
		create_user,
		DATE_FORMAT(create_time,'%Y-%m-%d
		%H:%i:%s') as
		create_time,
		update_user,
		DATE_FORMAT(update_time,'%Y-%m-%d %H:%i:%s')
		as
		update_time
	</sql>
	<select id="selectByCode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from systemmodule.sm_column
		where `code` = #{code,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByCode" parameterType="java.lang.String">
		delete from
		systemmodule.sm_column
		where `code` = #{code,jdbcType=VARCHAR}
	</delete>
	<insert id="insertSelective" parameterType="org.module.model.system.db.SmColumn">
		insert into systemmodule.sm_column
		<trim prefix="(" suffix=")" suffixOverrides=",">
			uid,
			`code`,
			table_code,
			`name`,
			<if test="columnNote != null and columnNote != ''">
				column_note,
			</if>
			column_type,
			<if test="columnLength != null">
				column_length,
			</if>
			<if test="numericScale != null">
				numeric_scale,
			</if>
			<if test="columnSort != null">
				column_sort,
			</if>
			<if test="columnKey != null and columnKey != ''">
				column_key,
			</if>
			create_user,
			create_time,
			update_user,
			update_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{uid,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			#{tableCode,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR},
			<if test="columnNote != null and columnNote != ''">
				#{columnNote,jdbcType=VARCHAR},
			</if>
			#{columnType,jdbcType=VARCHAR},
			<if test="columnLength != null">
				#{columnLength,jdbcType=INTEGER},
			</if>
			<if test="numericScale != null">
				#{numericScale,jdbcType=INTEGER},
			</if>
			<if test="columnSort != null">
				#{columnSort,jdbcType=INTEGER},
			</if>
			<if test="columnKey != null and columnKey != ''">
				#{columnKey,jdbcType=VARCHAR},
			</if>
			#{createUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{createTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
			#{updateUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
		</trim>
	</insert>
	<update id="updateByCode" parameterType="org.module.model.system.db.SmColumn">
		update systemmodule.sm_column
		<set>
			<if test="name != null and name !=''">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="columnNote != null and columnNote !=''">
				column_note = #{columnNote,jdbcType=VARCHAR},
			</if>
			<if test="columnType != null and columnType !=''">
				column_type = #{columnType,jdbcType=VARCHAR},
			</if>
			<if test="columnLength != null">
				column_length = #{columnLength,jdbcType=INTEGER},
			</if>
			<if test="numericScale != null">
				numeric_scale = #{numericScale,jdbcType=INTEGER},
			</if>
			<if test="columnSort != null">
				column_sort = #{columnSort,jdbcType=INTEGER},
			</if>
			<if test="columnKey != null and columnKey !=''">
				column_key = #{columnKey,jdbcType=VARCHAR},
			</if>
			update_user = #{updateUser,jdbcType=VARCHAR},
			update_time =
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'),
		</set>
		where `code` = #{code,jdbcType=VARCHAR}
	</update>
	<select id="findEntityAllToPage" parameterType="org.module.dto.system.db.SmColumnDto"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from systemmodule.sm_column
		<where>
			table_code = #{tableCode,jdbcType=VARCHAR}
			<if test="name != null and name != ''">
				and `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="columnNote != null and columnNote !=''">
				and column_note = #{columnNote,jdbcType=VARCHAR}
			</if>
		</where>
		limit #{start,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="findEntityAllCountToPage" parameterType="org.module.dto.system.db.SmColumnDto"
		resultType="java.lang.Integer">
		select count(1)
		from systemmodule.sm_column
		<where>
			table_code = #{tableCode,jdbcType=VARCHAR}
			<if test="name != null and name != ''">
				and `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="columnNote != null and columnNote !=''">
				and column_note = #{columnNote,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
</mapper>