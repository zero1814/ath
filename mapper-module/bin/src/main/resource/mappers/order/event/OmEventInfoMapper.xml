<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.module.mapper.order.event.OmEventInfoMapper">
	<resultMap id="BaseResultMap" type="org.module.model.order.event.OmEventInfo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="event_type" property="eventType" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="VARCHAR" />
		<result column="end_time" property="endTime" jdbcType="VARCHAR" />
		<result column="event_status" property="eventStatus" jdbcType="VARCHAR" />
		<result column="event_pic_url" property="eventPicUrl" jdbcType="VARCHAR" />
		<result column="event_url" property="eventUrl" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, `code`, `name`, event_type, description, start_time,
		end_time,
		event_status,
		event_pic_url, event_url, create_user,
		DATE_FORMAT(create_time,'%Y-%m-%d
		%H:%i:%s') as
		create_time,
		update_user,
		DATE_FORMAT(update_time,'%Y-%m-%d %H:%i:%s')
		as
		update_time
	</sql>
	<select id="selectByCode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ordermodule.om_event_info
		where `code` = #{code,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByCode" parameterType="java.lang.String">
		delete from
		ordermodule.om_event_info
		where `code` = #{code,jdbcType=VARCHAR}
	</delete>
	<insert id="insertSelective" parameterType="org.module.model.order.event.OmEventInfo">
		insert into ordermodule.om_event_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			uid,
			`code`,
			`name`,
			event_type,
			description,
			start_time,
			end_time,
			event_status,
			event_pic_url,
			event_url,
			create_user,
			create_time,
			update_user,
			update_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{uid,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR},
			#{eventType,jdbcType=VARCHAR},
			#{description,jdbcType=VARCHAR},
			#{startTime,jdbcType=VARCHAR},
			#{endTime,jdbcType=VARCHAR},
			#{eventStatus,jdbcType=VARCHAR},
			#{eventPicUrl,jdbcType=VARCHAR},
			#{eventUrl,jdbcType=VARCHAR},
			#{createUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{createTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
			#{updateUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
		</trim>
	</insert>
	<update id="updateByCode" parameterType="org.module.model.order.event.OmEventInfo">
		update ordermodule.om_event_info
		<set>
			<if test="name != null and name !=''">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
			<if test="eventType != null">
				event_type = #{eventType,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=VARCHAR},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=VARCHAR},
			</if>
			<if test="eventStatus != null">
				event_status = #{eventStatus,jdbcType=VARCHAR},
			</if>
			<if test="eventPicUrl != null and eventPicUrl !=''">
				event_pic_url = #{eventPicUrl,jdbcType=VARCHAR},
			</if>
			<if test="eventUrl != null and eventUrl != ''">
				event_url = #{eventUrl,jdbcType=VARCHAR},
			</if>
			update_user = #{updateUser,jdbcType=VARCHAR},
			update_time =
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'),
		</set>
		where `code` = #{code,jdbcType=VARCHAR}
	</update>
</mapper>