<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.module.mapper.system.page.SmPageMapper">
	<resultMap id="BaseResultMap" type="org.module.model.system.page.SmPage">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="parent_code" property="parentCode" jdbcType="VARCHAR" />
		<result column="group_code" property="groupCode" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="param" property="param" jdbcType="VARCHAR" />
		<result column="flag_able" property="flagAble" jdbcType="INTEGER" />
		<result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<collection property="group"
			ofType="org.module.model.system.page.SmPageGroup">
			<result column="group_name" property="name" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		id, uid,`code`,parent_code,group_code, `name`, url, param,
		flag_able,
		is_deleted,
		create_user,
		DATE_FORMAT(create_time,'%Y-%m-%d
		%H:%i:%s') as
		create_time,
		update_user,
		DATE_FORMAT(update_time,'%Y-%m-%d %H:%i:%s')
		as
		update_time
	</sql>
	<select id="selectByCode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from systemmodule.sm_page
		where `code`=#{code,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByCode" parameterType="java.lang.String">
		delete from
		systemmodule.sm_page
		where `code`=#{code,jdbcType=VARCHAR}
	</delete>
	<insert id="insertSelective" parameterType="org.module.model.system.page.SmPage">
		insert into systemmodule.sm_page
		<trim prefix="(" suffix=")" suffixOverrides=",">
			uid,
			`code`,
			<if test="parentCode != null and parentCode != ''">
				parent_code,
			</if>
			<if test="groupCode != null and groupCode != ''">
				group_code,
			</if>
			`name`,
			url,
			<if test="param != null and param != ''">
				param,
			</if>
			<if test="flagAble != null">
				flag_able,
			</if>
			<if test="isDeleted != null">
				is_deleted,
			</if>
			create_user,
			create_time,
			update_user,
			update_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{uid,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			<if test="parentCode != null and parentCode != ''">
				#{parentCode,jdbcType=VARCHAR},
			</if>
			<if test="groupCode != null and groupCode != ''">
				#{groupCode,jdbcType=VARCHAR},
			</if>
			#{name,jdbcType=VARCHAR},
			#{url,jdbcType=VARCHAR},
			<if test="param != null and param != ''">
				#{param,jdbcType=VARCHAR},
			</if>
			<if test="flagAble != null">
				#{flagAble,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=INTEGER},
			</if>
			#{createUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{createTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
			#{updateUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
		</trim>
	</insert>
	<update id="updateByCode" parameterType="org.module.model.system.page.SmPage">
		update systemmodule.sm_page
		<set>
			<if test="parentCode != null and parentCode != ''">
				parent_code=#{parentCode,jdbcType=VARCHAR},
			</if>
			<if test="groupCode != null and groupCode != ''">
				group_code=#{groupCode,jdbcType=VARCHAR},
			</if>
			<if test="name != null and name != ''">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null and url != ''">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="param != null and param != ''">
				param = #{param,jdbcType=VARCHAR},
			</if>
			<if test="flagAble != null">
				flag_able = #{flagAble,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
				is_deleted = #{isDeleted,jdbcType=INTEGER},
			</if>
			update_user = #{updateUser,jdbcType=VARCHAR},
			update_time =
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'),
		</set>
		where `code`=#{code,jdbcType=VARCHAR}
	</update>
	<select id="findDataAll" parameterType="org.module.dto.system.page.SmPageDto"
		resultMap="BaseResultMap">
		SELECT
		sp.`code`,
		sp.parent_code,
		sp.`name`,
		sp.group_code,
		spg.`name` AS
		group_name,
		sp.url,
		sp.param,
		sp.flag_able
		FROM
		systemmodule.sm_page AS sp
		LEFT JOIN systemmodule.sm_page_group AS spg ON sp.group_code =
		spg.`code`
		<where>
			sp.parent_code = #{parentCode,jdbcType=VARCHAR}
			and
			sp.group_code =
			#{groupCode,jdbcType=VARCHAR}
		</where>
	</select>
	<!-- 判断是否包含子页面 -->
	<select id="isExistsChildPage" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(1) from systemmodule.sm_page where parent_code
		= #{parentCode,jdbcType=VARCHAR}
	</select>
	<select id="findPages" resultMap="BaseResultMap"
		parameterType="org.module.dto.system.page.SmPageDto">
		SELECT
		p.`code`,
		p.parent_code,
		p.group_code,
		CONCAT(g.`name`, '-', p.`name`) AS `name`,
		p.url,
		p.param,
		p.flag_able
		FROM
		systemmodule.sm_page AS p
		LEFT JOIN systemmodule.sm_page_group AS g ON p.group_code = g.`code`
		<where>
			and p.is_deleted = 0
			and p.url != ""
			<if test="flagAble != null">
				and p.flag_able = ${#flagAble,jdbcType=INTEGER}
			</if>
		</where>
	</select>
</mapper>